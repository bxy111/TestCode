1.  程序计数器是一块较小的内存空间，可以看作是当前线程所执行的字节码的行号指示器。字节码解释器工作时就是通过改变这个计数器的值
    来选取下一条需要执行的字节码指令。
2.  如果线程正在执行的是一个java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；
    如果正在执行的是Native方法，这个计数器值则为空（Undefined）.
3.  与程序计数器一样，Java虚拟机栈也是线程私有的。
    如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；
    如果虚拟机栈可以动态扩展，如果扩展时无法申请到足够的内存，就会抛出OutOfMemoryError异常。
4.  本地方法栈与虚拟机栈所发挥的作用是非常相似的，它们之间的区别不过是虚拟机栈为虚拟机执行java方法服务；
    而本地方法栈则为虚拟机使用到的Native方法服务。
5.  Java堆是Java虚拟机所管理的内存中最大的一块。java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。
6.  方法区与Java堆一样，是各个线程共享的内存区域，用来存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码
    等数据。